{  
    "swagger":"2.0",
    "info":{  
       "description":"This documentation defines API instrumentation for [https://dbullssquad.herokuapp.com/].",
       "version":"1.0.0",
       "title":"E-store",
       "termsOfService":"http://swagger.io/terms/",
       "contact":{  
          "email":"torsami77@gmail.com"
       },
       "license":{  
          "name":"Apache 2.0",
          "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
       }
    },
    "host":"https://dbullssquad.herokuapp.com/",
    "basePath":"api/v1",
    "tags":[  
       {  
          "name":"E-store API",
          "description":"Everything about the API ",
          "externalDocs":{  
             "description":"See implementation here",
             "url":"http://dbulssquad.com"
          }
       }
    ],
    "schemes":[  
       "https",
       "http"
    ],
    "paths":{
      "/users/signup":{  
         "post":{  
            "tags":[  
               "user"
            ],
            "summary":"Signup user",
            "description":"Signs up a new user.",
            "operationId":"signUp",
            "produces":[  
               "application/json"
            ],
            "parameters":[
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Create user payload",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/signup"
                  }
               }
            ],
            "responses":{  
               "default":{  
                  "description":"successful operation"
               }
            }
         }
      },
      "/users/updatepassword":{  
         "put":{  
            "tags":[  
               "user"
            ],
            "summary":"updates the user's password",
            "description":"verifies user and update the user's password",
            "operationId":"updatepassword",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {
                  "in":"header",
                  "name":"authorization",
                  "description": "bearer xxxxxxxxxx",
                  "required": true,
                  "schema": {
                     "$ref":"#/definitions/token"
                  }
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"update password payload",
                  "required":true,
                  "schema":{  
                        "$ref":"#/definitions/updatepassword"
                  }
               }
            ],
            "responses":{  
               "default":{  
                  "description":"successful operation"
               }
            }
         }
      },
      "/users/signin":{  
         "post":{  
            "tags":[  
               "user"
            ],
            "summary":"signin user",
            "description":"signs in a user",
            "operationId":"signin",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"signin user payload",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/signin"
                  }
               }
            ],
            "responses":{  
               "default":{  
                  "description":"successful operation"
               }
            }
         }
      },
      "/users/forgotpassword":{
         "post":{  
            "tags":[  
               "user"
            ],
            "summary":"password recovery",
            "description":"",
            "operationId":"forgotpassword",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"email",
                  "in":"body",
                  "description":"The email of user who's password was forgotten",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/forgotpassword"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"string"
                  },
                  "headers":{  
                     "X-Rate-Limit":{  
                        "type":"integer",
                        "format":"int32",
                        "description":"calls per hour allowed by the user"
                     },
                     "X-Expires-After":{  
                        "type":"string",
                        "format":"date-time",
                        "description":"date in UTC when token expires"
                     }
                  }
               },
               "400":{  
                  "description":"Invalid username/password supplied"
               }
            }
         }
      },  
      "/product/add":{  
         "post":{  
            "tags":[  
               "product"
            ],
            "summary":"Adds a new products to the store",
            "description":"",
            "operationId":"addProduct",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Product payload that needs to be added to the store",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/addProduct"
                  }
               }
            ],
            "responses":{  
               "405":{  
                  "description":"Invalid input"
               }
            }
         }
      },
       "/product/getAll":{  
          "get":{  
             "tags":[  
                "product"
             ],
             "summary":"Fetches all products",
             "description":"Fetches all products with details",
             "operationId":"getAll",
             "produces":[  
                "application/json"
             ],
             "responses":{  
                "200":{  
                   "description":"successful operation",
                   "schema":{  
                      "type":"array",
                      "items":{  
                         "$ref":"#/definitions/addProduct"
                      }
                   }
                },
                "400":{  
                   "description":"Invalid status value"
                }
             }
          }
       },
       "/product/getOne/:id":{  
         "get":{  
            "tags":[  
               "product"
            ],
            "summary":"Fetches a product by id",
            "description":"Fetches a product with details",
            "operationId":"getOne",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                        "$ref":"#/definitions/addProduct"
                  }
               },
               "400":{  
                  "description":"Invalid status value"
               }
            }
         }
      },
       "/store/inventory":{  
          "get":{  
             "tags":[  
                "store"
             ],
             "summary":"Returns pet inventories by status",
             "description":"Returns a map of status codes to quantities",
             "operationId":"getInventory",
             "produces":[  
                "application/json"
             ],
             "parameters":[  
 
             ],
             "responses":{  
                "200":{  
                   "description":"successful operation",
                   "schema":{  
                      "type":"object",
                      "additionalProperties":{  
                         "type":"integer",
                         "format":"int32"
                      }
                   }
                }
             },
             "security":[  
                {  
                   "api_key":[  
 
                   ]
                }
             ]
          }
       },
       "/store/order":{  
          "post":{  
             "tags":[  
                "store"
             ],
             "summary":"Place an order for a pet",
             "description":"",
             "operationId":"placeOrder",
             "produces":[  
                "application/xml",
                "application/json"
             ],
             "parameters":[  
                {  
                   "in":"body",
                   "name":"body",
                   "description":"order placed for purchasing the pet",
                   "required":true,
                   "schema":{  
                      "$ref":"#/definitions/Order"
                   }
                }
             ],
             "responses":{  
                "200":{  
                   "description":"successful operation",
                   "schema":{  
                      "$ref":"#/definitions/Order"
                   }
                },
                "400":{  
                   "description":"Invalid Order"
                }
             }
          }
       },
       "/store/order/{orderId}":{  
          "get":{  
             "tags":[  
                "store"
             ],
             "summary":"Find purchase order by ID",
             "description":"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
             "operationId":"getOrderById",
             "produces":[  
                "application/xml",
                "application/json"
             ],
             "parameters":[  
                {  
                   "name":"orderId",
                   "in":"path",
                   "description":"ID of pet that needs to be fetched",
                   "required":true,
                   "type":"integer",
                   "maximum":10.0,
                   "minimum":1.0,
                   "format":"int64"
                }
             ],
             "responses":{  
                "200":{  
                   "description":"successful operation",
                   "schema":{  
                      "$ref":"#/definitions/Order"
                   }
                },
                "400":{  
                   "description":"Invalid ID supplied"
                },
                "404":{  
                   "description":"Order not found"
                }
             }
          },
          "delete":{  
             "tags":[  
                "store"
             ],
             "summary":"Delete purchase order by ID",
             "description":"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
             "operationId":"deleteOrder",
             "produces":[  
                "application/xml",
                "application/json"
             ],
             "parameters":[  
                {  
                   "name":"orderId",
                   "in":"path",
                   "description":"ID of the order that needs to be deleted",
                   "required":true,
                   "type":"integer",
                   "minimum":1.0,
                   "format":"int64"
                }
             ],
             "responses":{  
                "400":{  
                   "description":"Invalid ID supplied"
                },
                "404":{  
                   "description":"Order not found"
                }
             }
          }
       }
    },
    "securityDefinitions":{  
       "petstore_auth":{  
          "type":"oauth2",
          "authorizationUrl":"https://petstore.swagger.io/oauth/authorize",
          "flow":"implicit",
          "scopes":{  
             "write:pets":"modify pets in your account",
             "read:pets":"read your pets"
          }
       },
       "api_key":{  
          "type":"apiKey",
          "name":"authorization",
          "in":"header"
       }
    },
    "definitions":{
       "token":{
         "type":"apiKey",
         "properties": {
            "token": "bearer xxxxxxxxxx"
         }
       },
      "signup":{  
            "type":"object",
            "properties":{  
               "email":{  
                  "type":"string"
               },
               "mobile_number":{  
                  "type":"string"
               },
               "first_name":{  
                  "type":"string"
               },
               "last_name":{  
                  "type":"string"
               }
            },
            "xml":{  
               "name":"signup"
            }
         },
  	   "updatepassword":{  
          "type":"object",
          "properties":{  
             "password":{  
                "type":"string"
             },
	          "confirmPassword":{  
                "type":"string"
             }
          },
          "xml":{  
             "name":"updatepassword"
          }
       },
       "signin":{
            "type":"object",
            "properties":{
               "email":{
                  "type":"string"
               },
               "password": {
                  "type":"string"
               }
            },
            "xml":{
               "name":"signin"
            }
       },
       "addProduct":{
         "type":"object",
         "properties":{
            "image_url":{
               "type":"string"
            },
            "price": {
               "type":"integer"
            },
            "description":{
               "type":"string"
            }
         },
         "xml":{
            "name":"signin"
         }
       },
       "forgotpassword": {
            "type": "object",
            "properties":{
               "email": {
                  "type":"string"
               }
            }
       },
       "Order":{  
          "type":"object",
          "properties":{  
             "id":{  
                "type":"integer",
                "format":"int64"
             },
             "petId":{  
                "type":"integer",
                "format":"int64"
             },
             "quantity":{  
                "type":"integer",
                "format":"int32"
             },
             "shipDate":{  
                "type":"string",
                "format":"date-time"
             },
             "status":{  
                "type":"string",
                "description":"Order Status",
                "enum":[  
                   "placed",
                   "approved",
                   "delivered"
                ]
             },
             "complete":{  
                "type":"boolean",
                "default":false
             }
          },
          "xml":{  
             "name":"Order"
          }
       },
       "Category":{  
          "type":"object",
          "properties":{  
             "id":{  
                "type":"integer",
                "format":"int64"
             },
             "name":{  
                "type":"string"
             }
          },
          "xml":{  
             "name":"Category"
          }
       },
       "Tag":{  
          "type":"object",
          "properties":{  
             "id":{  
                "type":"integer",
                "format":"int64"
             },
             "name":{  
                "type":"string"
             }
          },
          "xml":{  
             "name":"Tag"
          }
       },
       "Pet":{  
          "type":"object",
          "required":[  
             "name",
             "photoUrls"
          ],
          "properties":{  
             "id":{  
                "type":"integer",
                "format":"int64"
             },
             "category":{  
                "$ref":"#/definitions/Category"
             },
             "name":{  
                "type":"string",
                "example":"doggie"
             },
             "photoUrls":{  
                "type":"array",
                "xml":{  
                   "name":"photoUrl",
                   "wrapped":true
                },
                "items":{  
                   "type":"string"
                }
             },
             "tags":{  
                "type":"array",
                "xml":{  
                   "name":"tag",
                   "wrapped":true
                },
                "items":{  
                   "$ref":"#/definitions/Tag"
                }
             },
             "status":{  
                "type":"string",
                "description":"pet status in the store",
                "enum":[  
                   "available",
                   "pending",
                   "sold"
                ]
             }
          },
          "xml":{  
             "name":"Pet"
          }
       },
       "ApiResponse":{  
          "type":"object",
          "properties":{  
             "code":{  
                "type":"integer",
                "format":"int32"
             },
             "type":{  
                "type":"string"
             },
             "message":{  
                "type":"string"
             }
          }
       }
    },
    "externalDocs":{  
       "description":"Find out more about Swagger",
       "url":"http://swagger.io"
    }
 }
